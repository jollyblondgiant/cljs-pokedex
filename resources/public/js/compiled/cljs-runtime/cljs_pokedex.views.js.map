{"version":3,"sources":["cljs_pokedex/views.cljs"],"mappings":"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","names":["cljs-pokedex.views/ball-map","cljs-pokedex.views/region-ball","region","regions","re_frame.core.subscribe","cljs.core/deref","cljs.core/contains?","re-frame.core/dispatch","cljs.core.get","cljs.core._EQ_","cljs.core/name","cljs-pokedex.views/sprite-panel","sprite","conf","cljs.core.assoc","cljs-pokedex.views/guess-result","pokemon","winner?","cljs-pokedex.views/guess-input","input","cljs-pokedex.views/nav-ball","props","G__27034","cljs.core/Keyword","js/console.log","cljs-pokedex.views/caught-pokemon","cljs-pokedex.views/party-panel","party","iter__4611__auto__","s__27036","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4609__auto__","size__4610__auto__","cljs.core/count","b__27038","cljs.core/chunk-buffer","i__27037","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__27035","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs-pokedex.views/strikes-panel","strikes","trainer","s__27040","b__27042","i__27041","iter__27039","heart","cljs.core.range","cljs-pokedex.views/navball-panel","guess","cljs.core/boolean?","cljs-pokedex.views/game-screen","cljs-pokedex.views/lose-screen","cljs-pokedex.views/win-screen","vec__27043","cljs.core.nth","poke","mon","cljs.core/split-at","s__27047","b__27049","i__27048","iter__27046","s__27051","b__27053","i__27052","iter__27050","cljs-pokedex.views/login-screen","login","cljs.core/empty?","s__27055","b__27057","i__27056","iter__27054","cljs-pokedex.views/main-panel","cljs.core/chunk-first"],"sourcesContent":["(ns cljs-pokedex.views\n  (:require\n   [re-frame.core :as re-frame :refer [subscribe dispatch]]\n   [cljs-pokedex.subs :as subs]\n   [cognitect.transit :as t]\n   [cljs-pokedex.events :as events]\n   ))\n\n\n(def ball-map\n  {:kanto \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/safari-ball.png\"\n   :johto \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/net-ball.png\"\n   :hoenn \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dive-ball.png\"\n   :sinnoh \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/nest-ball.png\"\n   :unova \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/repeat-ball.png\"\n   :kalos \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/timer-ball.png\"\n   :alola \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/luxury-ball.png\"\n   :galar \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/premier-ball.png\"\n   :all \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/master-ball.png\"})\n\n(defn region-ball [region]\n  (let [regions (subscribe [::subs/regions])]\n    [:div.region-ball\n     (cond (contains? @regions region)\n\n       [:button.btn\n        {:on-click #(dispatch [::events/remove-region region])}\n        [:img {:style {:filter \"brightness(0)\"}\n               :src (get ball-map region)}]]\n       (contains? @regions :all)\n       [:button.btn\n        (when (= region :all)\n          {:on-click\n           #(dispatch [::events/remove-region region])})\n        [:img {:style {:filter \"brightness(0)\"}\n               :src (get ball-map region)}]]\n       :else\n       [:button.btn\n        {:on-click #(dispatch [::events/add-region region])}\n        [:img {:src (get ball-map region)}]])\n     [:span (name region)]]))\n\n(defn sprite-panel [sprite]\n  (let [conf {:src sprite}]\n    [:img#pokemon-sprite\n     (if @(subscribe [::subs/guessing?])\n       (assoc conf :style {:filter \"brightness(0)\"})\n       conf)\n     ]))\n\n(defn guess-result []\n  (let [pokemon (:name @(subscribe [::subs/pokemon]))\n        winner? @(subscribe [::subs/guess-result])]\n    (if winner?\n      [:span#win.guess (str \"you did it! caught \" pokemon \"!\")]\n      [:span#lose.guess (str \"The \" pokemon \" got away!\")]))\n  )\n\n(defn guess-input []\n  [:input#guess-input\n   {:placeholder \"Who's that PokeMon?\"\n    :type :text\n    :on-change (fn [input]\n                 (dispatch [::events/input-guess\n                            (-> input .-target .-value)])\n                 )}])\n\n(defn nav-ball [props]\n  [:button.btn.nav-ball\n   {:on-click (case (:action props)\n                :new-pokemon\n                #(dispatch [::events/new-pokemon \"kanto\"])\n                :catch-pokemon\n                #(when  @(subscribe [::subs/guess-input])\n                   (dispatch [::events/guess-pokemon]))\n                #(js/console.log (:text props)))}\n   [:img.poke-ball {:src \"img/pokeball.png\"}]\n   [:p.navball-text(:text props)]\n   ])\n\n(defn caught-pokemon [pokemon]\n  [:button.btn.caught-pokemon\n   {:key (:num pokemon)\n    :on-click #(js/console.log pokemon)}\n   [:img.poke-ball {:src \"img/pokeball.png\"}]])\n\n(defn party-panel []\n  (let [pokemon (subscribe [::subs/pokemon])\n        party   (subscribe [::subs/caught])]\n    [:div#pokemon-party.col-md-1.offset-md-11\n     (for [pokemon @party]\n       ^{:key (:num pokemon)}\n       [caught-pokemon pokemon])]))\n\n(defn strikes-panel []\n  (let [strikes (subscribe [::subs/strikes])\n        trainer (subscribe [::subs/trainer])]\n    [:div#strikes.col-md-2.offset-md-9\n     [:span.poke-font @trainer \"  \"]\n     (for [heart (range @strikes)]\n       ^{:key heart}\n       [:img.heart-strike {:src \"img/heart.png\"}])]))\n\n(defn navball-panel []\n  (let [guess   (subscribe [::subs/guess-result])]\n    [:div#navball-row.row\n     (if (keyword? @guess)\n       [nav-ball {:text \"Catch PokeMon\"\n                  :action :catch-pokemon}]\n       [nav-ball {:text \"New PokeMon\"\n                  :action :new-pokemon}])\n     (when (keyword? @guess)\n       [guess-input])\n     (when (boolean? @guess)\n       [guess-result])]))\n\n(defn game-screen []\n  (let [pokemon (subscribe [::subs/pokemon])]\n    [:div#game-screen\n     [:div.col-md3.offset-md-1\n      (when @pokemon\n        [sprite-panel (:sprite @pokemon)])\n      [navball-panel]]\n     [strikes-panel]\n     [party-panel]]))\n\n(defn lose-screen []\n  [:div#lose-screen.row\n   [:div.col-md1\n    [:img#poke-prof {:src \"img/rocket.png\"}]]\n   [:div.col-md-3\n    [:h2.poke-font\n     \"Oh No! You whited out!\"]\n    [:button.btn.btn-primary\n     {:href \"/\"}\n     [:a.poke-font {:href \"/\"} \"Try Again!\"]]]])\n\n(defn win-screen []\n  (let [party   (subscribe [::subs/caught])\n        [poke mon] (split-at 3 @party)\n        trainer (subscribe [::subs/trainer])]\n    [:div#win-screen.offset-md-2\n     #_[:h2.poke-font.top-buffer-10\n        \"\"]\n     [:h2.poke-font.top-buffer-10 \"you win! you are the very best, like no one ever was!\"]\n     [:h2.poke-font.top-buffer-10 @trainer \"'s party:\"]\n     [:div.row\n      [:div.col-md-6\n       (for [pokemon poke]\n         ^{:key (:num pokemon)}\n         [:div\n          [:img {:src (:sprite pokemon)}]\n          [:span.poke-font (:name pokemon)]])]\n      [:div.col-md-6\n       (for [pokemon mon]\n         ^{:key (:num pokemon)}\n         [:div\n          [:img {:src (:sprite pokemon)}]\n          [:span.poke-font (:name pokemon)]])]\n      [:button.btn.btn-primary\n       {:href \"/\"}\n       [:a.poke-font {:href \"/\"} \"Try Again!\"]]]\n\n\n\n     ]))\n\n(defn login-screen []\n  (let [login (subscribe [::subs/login])\n        regions (subscribe [::subs/regions])]\n    [:div#login-screen.row\n     [:div.col-md1\n      [:img#poke-prof {:src \"img/prof-oak.png\"}]]\n     [:div.col-md3.poke-font\n      [:h2.poke-font \"Welcome to \\\"Who's that PokeMon?!\\\"\"]\n      [:div.row\n       [:input#trainer-login.col-md-5\n        {:placeholder \"What's your name again?\"\n         :type :text\n         :on-change (fn [input]\n                      (dispatch [::events/input-login\n                                 (-> input .-target .-value)])\n                      )}]\n       [:button.btn.btn-success.col-md-2\n        {:on-click #(when @login\n                      (dispatch [::events/login-trainer]))\n         :disabled (or\n                    (nil? @login)\n                    (empty? @regions))}\n        \"Play!\"]]\n      [:div.row.top-buffer-10\n       [:h3.poke-font \"Select Regions:\"]]\n      [:div#regions.row.top-buffer-10\n       (for [region [:kanto :johto :hoenn\n                     :sinnoh :unova :kalos\n                     :alola :galar :all\n                     ]]\n         ^{:key region}\n         [region-ball region])]\n      ]]))\n\n\n(defn main-panel []\n  (let [strikes (subscribe [::subs/strikes])\n        party (subscribe [::subs/caught])\n        trainer (subscribe [::subs/trainer])]\n    (cond\n     (nil? @trainer)         [login-screen]\n     (= 0 @strikes)          [lose-screen]\n     (-> @party count (= 6)) [win-screen]\n     :else                   [game-screen]\n      )))\n"]}